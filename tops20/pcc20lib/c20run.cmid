;
;	C20RUN - BASIC C RUN-TIME SUPPORT (TOPS20)
;

TITLE C20RUN
.INSRT SS:<C>CINSRT
.INSRT SS:<C>MINSRT

.GLOBAL A,B,C,D,EP,P
.GLOBAL ARGC,ARGV,SEG3HI,FNWORDS
.GLOBAL CHNTAB,PRCTAB,LOWLIM,HILIM

PDLSIZ==20000				; DESIRED PDL SIZE

;
;	START-UP ROUTINE
;

IENTRY	BEG				; START FROM DDT

	MOVE	A,[440700,,[0]]		; NULL STRING
	RSCAN				; SET RSCAN BUFFER TO NULL

IENTRY	START

	RESET

	;SET UP PDLOV HANDLER

	MOVEI	1,400000
	MOVE	2,[LEVTAB,,CHNTAB]
	SIR
	MOVEI	1,400000
	EIR
	MOVEI	1,400000
	MOVE	2,[000400,,000000]
	AIC

	SKIPE	LOWLIM		; If restarting, don't init free storage
	 JRST	R1		; system.
	MOVE	P,PDLBOT		; STACK
	MOVEI	EP,(P)
	SKIPN	A,SEG3HI	;[PLB] ALWAYS 0 WITH DECSEG.MAC & LINK
	 HRRZ	A,115		;[PLB] GET .JBHRL (SYMBOL TABLE INCLUDED)
	ADDI	A,1000
	LSH	A,-9.
	MOVEM	A,LOWLIM
	MOVEI	A,1000
	MOVEM	A,HILIM
	MCALL	AINIT

R1:	MOVE	P,PDLBOT		; STACK
	MOVEI	EP,(P)
	MCALL	$SETUP

IENTRY	RESTART
	MOVE	P,PDLBOT
	MOVEI	EP,(P)
	CALL	MAIN,[ARGC,[[ARGV]]]
	CALL	CEXIT,[[[0]]]

IENTRY	.EXIT

	MOVE	C,A	; SAVE RETURN CODE
	SETO	A,
	CLOSF		; CLOSE ALL FILES
	 JFCL
	MOVE	A,C
	HALTF		; COMMIT SUICIDE
	GO	.-1	; DON'T ALLOW RESTARTING

IENTRY	PDLSRV
	DEBRK


;
;	EXIT ROUTINES
;

CENTRY	CEXIT,[CC]
	CALL	CLOSALL	; CLOSE ALL C FILES
	MOVE	A,CC
	GO	.EXIT

CENTRY	CQUIT,[CC]
	CALL	CEXIT,[CC]


IENTRY	CFIX
	MOVM	0,-1(P)
	FADR	0,[.499999]
	FIX	0,0
	SKIPGE	-1(P)
	 MOVNS	0
	MOVEM	0,-1(P)
	POPJ	P,

IENTRY	CFLOAT
	FLTR	0,-1(P)
	MOVEM	0,-1(P)
	POPJ	P,

;	IMPURE AREA

.IDATA
TIMING:	BLOCK	1		; TIMING FLAG
EXITER:	BLOCK	1		; EXIT ROUTINE (FOR TIMING)
PDL:	BLOCK	PDLSIZ		; THE STACK

CHNTAB:	0,,INTR0
	0,,INTR1
	0,,INTR2
	0,,INTR3
	0,,INTR4
	0,,INTR5
	0,,INTR6
	0,,INTR7
	0,,INTR8
	1,,PDLSRV		; PDLOV HANDLER
	0,,INTR10
	0,,INTR11
	0,,INTR12
	0,,INTR13
	0,,INTR14
	0,,INTR15
	0,,INTR16
	0,,INTR17
	0,,INTR18
	0,,INTR19
	0,,INTR20
	0,,INTR21
	0,,INTR22
	0,,INTR23
	0,,INTR24
	0,,INTR25
	0,,INTR26
	0,,INTR27
	0,,INTR28
	0,,INTR29
	0,,INTR30
	0,,INTR31
	0,,INTR32
	0,,INTR33
	0,,INTR34
	0,,INTR35
.CODE
INTR0:	JSR	INTR
INTR1:	JSR	INTR
INTR2:	JSR	INTR
INTR3:	JSR	INTR
INTR4:	JSR	INTR
INTR5:	JSR	INTR
INTR6:	JSR	INTR
INTR7:	JSR	INTR
INTR8:	JSR	INTR
	JSR	INTR
INTR10:	JSR	INTR
INTR11:	JSR	INTR
INTR12:	JSR	INTR
INTR13:	JSR	INTR
INTR14:	JSR	INTR
INTR15:	JSR	INTR
INTR16:	JSR	INTR
INTR17:	JSR	INTR
INTR18:	JSR	INTR
INTR19:	JSR	INTR
INTR20:	JSR	INTR
INTR21:	JSR	INTR
INTR22:	JSR	INTR
INTR23:	JSR	INTR
INTR24:	JSR	INTR
INTR25:	JSR	INTR
INTR26:	JSR	INTR
INTR27:	JSR	INTR
INTR28:	JSR	INTR
INTR29:	JSR	INTR
INTR30:	JSR	INTR
INTR31:	JSR	INTR
INTR32:	JSR	INTR
INTR33:	JSR	INTR
INTR34:	JSR	INTR
INTR35:	JSR	INTR

; Note: only one level of interrupts permitted (level 3)!

INTR:	0			; Clobbered by JSR
	MOVEM	0,INTSAV	; Save registers
	MOVEI	0,INTSAV+1
	HRLI	0,1
	BLT	0,INTSAV+P-1
	HRRZ	1,INTR		; Save interrupt number
	SUBI	1,INTR0+1
	MOVEM	1,INTNUM
	PUSHJ	P,@PRCTAB(1)	; Call routine
	HRLI	0,INTSAV+1
	HRRI	0,1
	BLT	0,P-1
	MOVE	0,INTSAV
	SETZM	INTNUM
	DEBRK

MENTRY	DISMISS
	SKIPN	INTNUM
	 JRST	DS$1
	MOVEI	B,DS$1
	HRLI	B,010000	; Turn on user-mode bit
	MOVEM	B,PCLEV3
	SETZM	INTNUM
	DEBRK
DS$1:	RETURN

.IDATA
LEVTAB:	PCLEV1
	PCLEV2		; not used currently
	PCLEV3
PCLEV1:	BLOCK	1
PCLEV2:	BLOCK	1
PCLEV3:	BLOCK	1
INTSAV:	BLOCK	P	; registers 0 thru P-1
PDLBOT:	PDL
PDLTOP:	PDL+PDLSIZ-1
PRCTAB:	0 ? 0 ? 0 ? 0 ? 0 ? 0 ?	0 ? 0 ? 0 ? 0 ? 0 ? 0
	0 ? 0 ? 0 ? 0 ? 0 ? 0 ?	0 ? 0 ? 0 ? 0 ? 0 ? 0
	0 ? 0 ? 0 ? 0 ? 0 ? 0 ?	0 ? 0 ? 0 ? 0 ? 0 ? 0
INTNUM:	0
LOWLIM:	0
HILIM:	0
.PDATA
PZERO:	PUSH	P,ZERO
ZERO:	0
PUSHD:	PUSH	P,D

CONSTANTS

PATCH:

END	START
