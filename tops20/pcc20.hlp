pcc info (2/82 -- cjt@mit-xx)

This implementation of C for TOPS-20 is based on the Portable C Compiler
written by Steve Johnson of Bell Labs.  The compiler is source compatible
with V7 C as described in the book by Kernighan and Ritchie -- in fact,
it is the same compiler as used for the VAX with a different code generation
phase, so programs that compile and run on the VAX should do so with little
change on the 20.

The i/o system is moderately compatible with the "Standard I/O Library"
available under UNIX; see stdio.h.  For most purposes, you can use the
standard i/o interface just as you would on UNIX.

--- Compiling ---

PCC20 is the C compiler command.  Usage is

	pcc20 file1.c file2.c ...

where the arguments are the path names of C source files which
are to be compiled.  Each file will be compiled in turn, and if
the compilation is successful, the resulting relocatable file
will be placed in the file "file*.stk".  Arguments beginning
with the '-' character are taken to be compiler options.
Available options include:

	-c	compile only, do not assemble
	-g	do not delete MIDAS file
	-n	run the optimizer

For example, the command

	pcc20 foo.c

would compile the C program in the file "foo.c" in the current
directory, and place the resulting relocatable program in the
file "foo.stk".

--- Loading ---

Relocatable programs produced by the C compiler are loaded
together with the C support routines using the STINKR loader.
To load program files "foo", "bar", and "bletch" and produce a
runnable file "foo", type the following to STINKR:

	x ss:<c>stdio
	l foo
	l bar
	l bletch
	o foo.exe
	q

The q terminates the terminal input file. These commands
(minus the 'q') could also be written in a file, say "foo.stinkr",
in which case one could invoke STINKR by saying

	stinkr foo

and STINKR would read the commands from the command file.  The
'x' command on the first line is another way of causing commands
to be read from a file, in this "ss:<c>stdio.stinkr" which loads
the routines that implement the standard i/o functions.

--- Installation ---

There are 3 .exe files that must be installed where the system
can find them:

  pcc20.exe	an executive that calls the preprocessor, compiler,
		and assembler to process the specified files.

  midas.exe	an assembler compatible with the compiler output
		and the loader input.

  stinkr.exe	a loader.

PCC20 currently looks for the following files:

  ss:<c>	This is directory that gets search for system
		header files (e.g., <stdio.h>).

  ss:<c>cpp.exe	The standard C preprocessor, see UNIX manual for
		details.

  ss:<c>pcc.exe	The compiler, reads pre-processed C from its
		standard input, writes assembly language to its
		standard output.

  ss:<c>opt.exe	The optimizer, similar to C2 of the old Ritchie
		compiler.  It works on the assembly language
		ouput, producing another assembly language file.

Each assembly language intermediate file inserts:

  ps:<c>cinsrt.mid
  ps:<c>mulseg.mid

which contain various header sorts of info.  To change the various
path names, you'll have to fix PCC20 and the correct piece of PCC
(code.c I think).
