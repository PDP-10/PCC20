INSTALLATION OF THE C COMPILER:

Installation assuming you can build the C compiler some directories 
of its own:

	Build a directory <C> (or some such, the name doesn't matter).
	This directory doesn't need to be on PS:. It will need either
	550 or 950 pages, depending on whether you will keep the
	compiler sources on line.

	Build a subdirectory of the above (<C.LIB> usually, again it
	doesn't really matter). Give this directory 300 pages. (this
	will reduce the <C> directory to 250 or 650 pages).

	If you wish to keep the sources on line, build another subdirectory
	of <C>. Call it whatever you want, we don't care. Give it 400 
	pages. (Now <C> is down to 250 pages no matter what.)

	Define a system-wide logical name C: pointing to the top-level
	directory you created above. (System-wide logical names are
	defined in the <system>N-CONFIG.CMD file. You will have to be/get 
	an OPERATOR or WHEEL to do this.) Define another system-wide logical 
	name CLIB: pointing to the first subdirectory. THESE NAMES ARE BUILT 
	INTO THE COMPILER. If you cannot make these definitions, you have
	two choices. Either have people who wish to use C make these
	definitions on a job-wide basis, or get in touch with us regarding
	the changes necessary to the compiler.

	You're almost there! Mount the tape and restore the files from
	it as described below.

Installation if you cannot build the C compiler some directories of its
own.

	This is absurd. Go back and hammer on whoever said it couldn't
	have its own directories. If you can't win, go on to the next
	instruction. 

	Figure out where everything is going to live. Get this directory
	logically defined as C: and CLIB:. See the section on system-
	wide logical definitions, above.

	Mount the tape and restore the files as described below.

TAPE FILES

This tape contains five save sets, in order as follows:

DOC FILES -	Documentation for the compiler. Presumably you have
		already put this somewhere, since you are reading this.
		It probably should live in C:

SYS: FILES - 	This includes the newest version of the MIDAS assembler
		and CC.EXE, the top-level control program. These
		files should be placed somewhere in the SYS: search
		path, probably <subsys> or <unsupported>. If you already
		have MIDAS, you now have a newer one. Note that a special
		stripped-down version of MIDAS called CASM is used for
		assembling the output of the compiler, you need MIDAS
		only to reassemble the assembly-code library files.

C: FILES - 	These files go in the directory you defined as C:

INCLUDE FILES -	These files contain standard definitions and are often
		#include'd by other programs. They should be placed
		in the C: search path.

CLIB: FILES	These files go in the directory you defined as CLIB:

SOURCE FILES	Compiler sources, if you want to keep them on-line.
		Remember, however, that this compiler is covered
		by license agreements with the Western Electric
		Company, and both us and them will get truely annoyed
		if this code is distributed to another site, with or
		without your cooperation. Keep these sources protected!
	
All done? OK, read CC.hlp to figure out how to run the compiler.
Now, there is a program TESTC.C in C: which, when compiled and run,
will perform a quick and semi-complete test of C. Try it out. Good Luck!


If you wish to be informed of bug fixes and future developments regarding
this compiler, please send the net-address of the appropriate person
to JTW@MIT-MC. 
