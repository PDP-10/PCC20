This file documents the current state of the C debugging system.

To link a debugging version of a C program, compile those files
which you wish to debug with the -d option to the compiler. This
causes the compiler to generate extra information needed by the
debugger. Then say "x c:stddbg" rather than "x c:stdio" as the
first command to STINKR. This causes the debugger to be loaded with
the runtimes.

**********************************************************************

5/8/82 - there is no C debugger as yet. However, if you link your
program using the "x c:stddbg" command to STINKR, typing ^D (ctrl-D)
will activate an immediate trace of the runtime stack, showing
all currently active procedures. For each active procedure call,
the name of the procedure, code address from which it was called,
and octal values of any arguments will be displayed. Note that this
will always work, whether or not the program was compiled with the -d
switch to the compiler. Note further that functions which have 
structure-type arguments will not have their arguments printed
correctly, since the stack-tracer cannot yet figure out how big
the argument is.

Coming soon - 

	Stack-tracer will know argument types and sizes, and print
	  out accordingly.

	Execution tracing by function call, function return, or source
	  code line.

	Breakpointing by function call, function return, or source
	  code line.

	Display and modification of variables.

