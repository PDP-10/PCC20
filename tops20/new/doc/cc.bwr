[CC.BWR JTW 5/5/83]

Known oddities with the TOPS-20 C Compiler at this time:

0) Oops! UNSIGNED comparisons sometimes actually generate code
   which performs a signed comparison. I wonder why nobody noticed
   this until now??? (5/2/83)

1) In some rare cases type conflicts which generate only "warning"
   messages actually cause bad code to be generated. 

2) The compiler was recently changed to put file-wide STATIC object 
   names into an internal name-space, rather than passing the name to the
   assembler and linker. This results in file-wide STATIC function and
   variable names being unique to infinite characters instead of 5, but also
   requires that any STATIC object be declared as such before it's first
   use. (I feel that the C language requires this, but you used to be able
   to get away with cheating.) Some system library files may not conform
   to this new requirement. If so, recompiling the library file will
   result in warning messages explaining the problem. You will have to
   fix it if you want to recompile such a file.

3) The optimizer occasionally optimizes the functionality right out of
   your code. 

4) A recent attempt to compile the unix spread-sheet calculator program
   SC divulged hitherto unsuspected bugs of currently unknown origin.
   These result in fatal compiler errors, rather than generation of bad
   code.
